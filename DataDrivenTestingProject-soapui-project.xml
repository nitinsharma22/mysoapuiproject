<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="db7d4026-1653-4d82-a437-5e1ffe0e1601" activeEnvironment="Default environment" name="DataDrivenTestingProject" lastOpened="2016-12-15T13:47:25.449-06:00" resourceRoot="" soapui-version="6.0.0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="DataDrivenExample1"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value="TestCase Report"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="TestCase 4"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="d717aebb-e86c-4a8c-98a4-4a56e47fd173" wsaVersion="NONE" name="countrySoap" type="wsdl" bindingName="{http://www.webserviceX.NET}countrySoap" soapVersion="1_1" anonymous="optional" definition="http://www.webservicex.net/country.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://www.webservicex.net/country.asmx?WSDL"><con:part><con:url>http://www.webservicex.net/country.asmx?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webserviceX.NET" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webserviceX.NET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webserviceX.NET">
      <s:element name="GetCountryByCountryCode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CountryCode" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCountryByCountryCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCountryByCountryCodeResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetISD">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CountryName" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetISDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetISDResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCountries">
        <s:complexType/>
      </s:element>
      <s:element name="GetCountriesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCountriesResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCurrencyCodeByCurrencyName">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CurrencyName" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCurrencyCodeByCurrencyNameResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCurrencyCodeByCurrencyNameResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetISOCountryCodeByCountyName">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CountryName" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetISOCountryCodeByCountyNameResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetISOCountryCodeByCountyNameResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCurrencyCode">
        <s:complexType/>
      </s:element>
      <s:element name="GetCurrencyCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCurrencyCodeResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCountryByCurrencyCode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CurrencyCode" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCountryByCurrencyCodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCountryByCurrencyCodeResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCurrencies">
        <s:complexType/>
      </s:element>
      <s:element name="GetCurrenciesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCurrenciesResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCurrencyByCountry">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CountryName" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCurrencyByCountryResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCurrencyByCountryResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetGMTbyCountry">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CountryName" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetGMTbyCountryResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetGMTbyCountryResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string"/>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetCountryByCountryCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetCountryByCountryCode"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCountryCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetCountryByCountryCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetISDSoapIn">
    <wsdl:part name="parameters" element="tns:GetISD"/>
  </wsdl:message>
  <wsdl:message name="GetISDSoapOut">
    <wsdl:part name="parameters" element="tns:GetISDResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCountriesSoapIn">
    <wsdl:part name="parameters" element="tns:GetCountries"/>
  </wsdl:message>
  <wsdl:message name="GetCountriesSoapOut">
    <wsdl:part name="parameters" element="tns:GetCountriesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeByCurrencyNameSoapIn">
    <wsdl:part name="parameters" element="tns:GetCurrencyCodeByCurrencyName"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeByCurrencyNameSoapOut">
    <wsdl:part name="parameters" element="tns:GetCurrencyCodeByCurrencyNameResponse"/>
  </wsdl:message>
  <wsdl:message name="GetISOCountryCodeByCountyNameSoapIn">
    <wsdl:part name="parameters" element="tns:GetISOCountryCodeByCountyName"/>
  </wsdl:message>
  <wsdl:message name="GetISOCountryCodeByCountyNameSoapOut">
    <wsdl:part name="parameters" element="tns:GetISOCountryCodeByCountyNameResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetCurrencyCode"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetCurrencyCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCurrencyCodeSoapIn">
    <wsdl:part name="parameters" element="tns:GetCountryByCurrencyCode"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCurrencyCodeSoapOut">
    <wsdl:part name="parameters" element="tns:GetCountryByCurrencyCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCurrenciesSoapIn">
    <wsdl:part name="parameters" element="tns:GetCurrencies"/>
  </wsdl:message>
  <wsdl:message name="GetCurrenciesSoapOut">
    <wsdl:part name="parameters" element="tns:GetCurrenciesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyByCountrySoapIn">
    <wsdl:part name="parameters" element="tns:GetCurrencyByCountry"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyByCountrySoapOut">
    <wsdl:part name="parameters" element="tns:GetCurrencyByCountryResponse"/>
  </wsdl:message>
  <wsdl:message name="GetGMTbyCountrySoapIn">
    <wsdl:part name="parameters" element="tns:GetGMTbyCountry"/>
  </wsdl:message>
  <wsdl:message name="GetGMTbyCountrySoapOut">
    <wsdl:part name="parameters" element="tns:GetGMTbyCountryResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCountryCodeHttpGetIn">
    <wsdl:part name="CountryCode" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCountryCodeHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetISDHttpGetIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetISDHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountriesHttpGetIn"/>
  <wsdl:message name="GetCountriesHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeByCurrencyNameHttpGetIn">
    <wsdl:part name="CurrencyName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeByCurrencyNameHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetISOCountryCodeByCountyNameHttpGetIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetISOCountryCodeByCountyNameHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeHttpGetIn"/>
  <wsdl:message name="GetCurrencyCodeHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCurrencyCodeHttpGetIn">
    <wsdl:part name="CurrencyCode" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCurrencyCodeHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrenciesHttpGetIn"/>
  <wsdl:message name="GetCurrenciesHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyByCountryHttpGetIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyByCountryHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetGMTbyCountryHttpGetIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetGMTbyCountryHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCountryCodeHttpPostIn">
    <wsdl:part name="CountryCode" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCountryCodeHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetISDHttpPostIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetISDHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountriesHttpPostIn"/>
  <wsdl:message name="GetCountriesHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeByCurrencyNameHttpPostIn">
    <wsdl:part name="CurrencyName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeByCurrencyNameHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetISOCountryCodeByCountyNameHttpPostIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetISOCountryCodeByCountyNameHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyCodeHttpPostIn"/>
  <wsdl:message name="GetCurrencyCodeHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCurrencyCodeHttpPostIn">
    <wsdl:part name="CurrencyCode" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCountryByCurrencyCodeHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrenciesHttpPostIn"/>
  <wsdl:message name="GetCurrenciesHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyByCountryHttpPostIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCurrencyByCountryHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetGMTbyCountryHttpPostIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetGMTbyCountryHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:portType name="countrySoap">
    <wsdl:operation name="GetCountryByCountryCode">
      <wsdl:documentation>Get country name by country code</wsdl:documentation>
      <wsdl:input message="tns:GetCountryByCountryCodeSoapIn"/>
      <wsdl:output message="tns:GetCountryByCountryCodeSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetISD">
      <wsdl:documentation>Get International Dialing Code by country name</wsdl:documentation>
      <wsdl:input message="tns:GetISDSoapIn"/>
      <wsdl:output message="tns:GetISDSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCountries">
      <wsdl:documentation>Get all countries with ISO code</wsdl:documentation>
      <wsdl:input message="tns:GetCountriesSoapIn"/>
      <wsdl:output message="tns:GetCountriesSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCodeByCurrencyName">
      <wsdl:documentation>Get currency by currency name</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyCodeByCurrencyNameSoapIn"/>
      <wsdl:output message="tns:GetCurrencyCodeByCurrencyNameSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetISOCountryCodeByCountyName">
      <wsdl:documentation>Get countries by country name</wsdl:documentation>
      <wsdl:input message="tns:GetISOCountryCodeByCountyNameSoapIn"/>
      <wsdl:output message="tns:GetISOCountryCodeByCountyNameSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCode">
      <wsdl:documentation>Get all currencycode for each country</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyCodeSoapIn"/>
      <wsdl:output message="tns:GetCurrencyCodeSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCountryByCurrencyCode">
      <wsdl:documentation>Get country by currency code</wsdl:documentation>
      <wsdl:input message="tns:GetCountryByCurrencyCodeSoapIn"/>
      <wsdl:output message="tns:GetCountryByCurrencyCodeSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencies">
      <wsdl:documentation>Get all currency,currency code for all countries</wsdl:documentation>
      <wsdl:input message="tns:GetCurrenciesSoapIn"/>
      <wsdl:output message="tns:GetCurrenciesSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyByCountry">
      <wsdl:documentation>Get currency by country name</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyByCountrySoapIn"/>
      <wsdl:output message="tns:GetCurrencyByCountrySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetGMTbyCountry">
      <wsdl:documentation>Get greenwich mean time(GMT) by country name</wsdl:documentation>
      <wsdl:input message="tns:GetGMTbyCountrySoapIn"/>
      <wsdl:output message="tns:GetGMTbyCountrySoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="countryHttpGet">
    <wsdl:operation name="GetCountryByCountryCode">
      <wsdl:documentation>Get country name by country code</wsdl:documentation>
      <wsdl:input message="tns:GetCountryByCountryCodeHttpGetIn"/>
      <wsdl:output message="tns:GetCountryByCountryCodeHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetISD">
      <wsdl:documentation>Get International Dialing Code by country name</wsdl:documentation>
      <wsdl:input message="tns:GetISDHttpGetIn"/>
      <wsdl:output message="tns:GetISDHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCountries">
      <wsdl:documentation>Get all countries with ISO code</wsdl:documentation>
      <wsdl:input message="tns:GetCountriesHttpGetIn"/>
      <wsdl:output message="tns:GetCountriesHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCodeByCurrencyName">
      <wsdl:documentation>Get currency by currency name</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyCodeByCurrencyNameHttpGetIn"/>
      <wsdl:output message="tns:GetCurrencyCodeByCurrencyNameHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetISOCountryCodeByCountyName">
      <wsdl:documentation>Get countries by country name</wsdl:documentation>
      <wsdl:input message="tns:GetISOCountryCodeByCountyNameHttpGetIn"/>
      <wsdl:output message="tns:GetISOCountryCodeByCountyNameHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCode">
      <wsdl:documentation>Get all currencycode for each country</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyCodeHttpGetIn"/>
      <wsdl:output message="tns:GetCurrencyCodeHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCountryByCurrencyCode">
      <wsdl:documentation>Get country by currency code</wsdl:documentation>
      <wsdl:input message="tns:GetCountryByCurrencyCodeHttpGetIn"/>
      <wsdl:output message="tns:GetCountryByCurrencyCodeHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencies">
      <wsdl:documentation>Get all currency,currency code for all countries</wsdl:documentation>
      <wsdl:input message="tns:GetCurrenciesHttpGetIn"/>
      <wsdl:output message="tns:GetCurrenciesHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyByCountry">
      <wsdl:documentation>Get currency by country name</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyByCountryHttpGetIn"/>
      <wsdl:output message="tns:GetCurrencyByCountryHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetGMTbyCountry">
      <wsdl:documentation>Get greenwich mean time(GMT) by country name</wsdl:documentation>
      <wsdl:input message="tns:GetGMTbyCountryHttpGetIn"/>
      <wsdl:output message="tns:GetGMTbyCountryHttpGetOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="countryHttpPost">
    <wsdl:operation name="GetCountryByCountryCode">
      <wsdl:documentation>Get country name by country code</wsdl:documentation>
      <wsdl:input message="tns:GetCountryByCountryCodeHttpPostIn"/>
      <wsdl:output message="tns:GetCountryByCountryCodeHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetISD">
      <wsdl:documentation>Get International Dialing Code by country name</wsdl:documentation>
      <wsdl:input message="tns:GetISDHttpPostIn"/>
      <wsdl:output message="tns:GetISDHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCountries">
      <wsdl:documentation>Get all countries with ISO code</wsdl:documentation>
      <wsdl:input message="tns:GetCountriesHttpPostIn"/>
      <wsdl:output message="tns:GetCountriesHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCodeByCurrencyName">
      <wsdl:documentation>Get currency by currency name</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyCodeByCurrencyNameHttpPostIn"/>
      <wsdl:output message="tns:GetCurrencyCodeByCurrencyNameHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetISOCountryCodeByCountyName">
      <wsdl:documentation>Get countries by country name</wsdl:documentation>
      <wsdl:input message="tns:GetISOCountryCodeByCountyNameHttpPostIn"/>
      <wsdl:output message="tns:GetISOCountryCodeByCountyNameHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCode">
      <wsdl:documentation>Get all currencycode for each country</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyCodeHttpPostIn"/>
      <wsdl:output message="tns:GetCurrencyCodeHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCountryByCurrencyCode">
      <wsdl:documentation>Get country by currency code</wsdl:documentation>
      <wsdl:input message="tns:GetCountryByCurrencyCodeHttpPostIn"/>
      <wsdl:output message="tns:GetCountryByCurrencyCodeHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencies">
      <wsdl:documentation>Get all currency,currency code for all countries</wsdl:documentation>
      <wsdl:input message="tns:GetCurrenciesHttpPostIn"/>
      <wsdl:output message="tns:GetCurrenciesHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyByCountry">
      <wsdl:documentation>Get currency by country name</wsdl:documentation>
      <wsdl:input message="tns:GetCurrencyByCountryHttpPostIn"/>
      <wsdl:output message="tns:GetCurrencyByCountryHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetGMTbyCountry">
      <wsdl:documentation>Get greenwich mean time(GMT) by country name</wsdl:documentation>
      <wsdl:input message="tns:GetGMTbyCountryHttpPostIn"/>
      <wsdl:output message="tns:GetGMTbyCountryHttpPostOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="countrySoap" type="tns:countrySoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetCountryByCountryCode">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCountryByCountryCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISD">
      <soap:operation soapAction="http://www.webserviceX.NET/GetISD" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountries">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCountries" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCodeByCurrencyName">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCurrencyCodeByCurrencyName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISOCountryCodeByCountyName">
      <soap:operation soapAction="http://www.webserviceX.NET/GetISOCountryCodeByCountyName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCode">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCurrencyCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountryByCurrencyCode">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCountryByCurrencyCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencies">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCurrencies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyByCountry">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCurrencyByCountry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGMTbyCountry">
      <soap:operation soapAction="http://www.webserviceX.NET/GetGMTbyCountry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="countrySoap12" type="tns:countrySoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetCountryByCountryCode">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCountryByCountryCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISD">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetISD" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountries">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCountries" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCodeByCurrencyName">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCurrencyCodeByCurrencyName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISOCountryCodeByCountyName">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetISOCountryCodeByCountyName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCode">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCurrencyCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountryByCurrencyCode">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCountryByCurrencyCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencies">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCurrencies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyByCountry">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCurrencyByCountry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGMTbyCountry">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetGMTbyCountry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="countryHttpGet" type="tns:countryHttpGet">
    <http:binding verb="GET"/>
    <wsdl:operation name="GetCountryByCountryCode">
      <http:operation location="/GetCountryByCountryCode"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISD">
      <http:operation location="/GetISD"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountries">
      <http:operation location="/GetCountries"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCodeByCurrencyName">
      <http:operation location="/GetCurrencyCodeByCurrencyName"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISOCountryCodeByCountyName">
      <http:operation location="/GetISOCountryCodeByCountyName"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCode">
      <http:operation location="/GetCurrencyCode"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountryByCurrencyCode">
      <http:operation location="/GetCountryByCurrencyCode"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencies">
      <http:operation location="/GetCurrencies"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyByCountry">
      <http:operation location="/GetCurrencyByCountry"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGMTbyCountry">
      <http:operation location="/GetGMTbyCountry"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="countryHttpPost" type="tns:countryHttpPost">
    <http:binding verb="POST"/>
    <wsdl:operation name="GetCountryByCountryCode">
      <http:operation location="/GetCountryByCountryCode"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISD">
      <http:operation location="/GetISD"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountries">
      <http:operation location="/GetCountries"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCodeByCurrencyName">
      <http:operation location="/GetCurrencyCodeByCurrencyName"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetISOCountryCodeByCountyName">
      <http:operation location="/GetISOCountryCodeByCountyName"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyCode">
      <http:operation location="/GetCurrencyCode"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCountryByCurrencyCode">
      <http:operation location="/GetCountryByCurrencyCode"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencies">
      <http:operation location="/GetCurrencies"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCurrencyByCountry">
      <http:operation location="/GetCurrencyByCountry"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGMTbyCountry">
      <http:operation location="/GetGMTbyCountry"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="country">
    <wsdl:port name="countrySoap" binding="tns:countrySoap">
      <soap:address location="http://www.webservicex.net/country.asmx"/>
    </wsdl:port>
    <wsdl:port name="countrySoap12" binding="tns:countrySoap12">
      <soap12:address location="http://www.webservicex.net/country.asmx"/>
    </wsdl:port>
    <wsdl:port name="countryHttpGet" binding="tns:countryHttpGet">
      <http:address location="http://www.webservicex.net/country.asmx"/>
    </wsdl:port>
    <wsdl:port name="countryHttpPost" binding="tns:countryHttpPost">
      <http:address location="http://www.webservicex.net/country.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint></con:endpoints><con:operation id="5185970e-2115-4f3c-bc79-ee5e403f2457" isOneWay="false" action="http://www.webserviceX.NET/GetCountries" name="GetCountries" bindingOperationName="GetCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f46be44-16ff-49e0-96aa-f8ba6f632158" isOneWay="false" action="http://www.webserviceX.NET/GetCountryByCountryCode" name="GetCountryByCountryCode" bindingOperationName="GetCountryByCountryCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba6191a7-993d-408e-ba89-63e61f822be4" isOneWay="false" action="http://www.webserviceX.NET/GetCountryByCurrencyCode" name="GetCountryByCurrencyCode" bindingOperationName="GetCountryByCurrencyCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="90fe77f0-7204-49c1-a81d-6a40004c56d6" isOneWay="false" action="http://www.webserviceX.NET/GetCurrencies" name="GetCurrencies" bindingOperationName="GetCurrencies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="240f94bf-9b66-4a59-8100-c5329dba6586" isOneWay="false" action="http://www.webserviceX.NET/GetCurrencyByCountry" name="GetCurrencyByCountry" bindingOperationName="GetCurrencyByCountry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95975178-7577-481e-83e9-6d364a45c56e" isOneWay="false" action="http://www.webserviceX.NET/GetCurrencyCode" name="GetCurrencyCode" bindingOperationName="GetCurrencyCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e145369-623c-4c29-a24e-84cce56bdea5" isOneWay="false" action="http://www.webserviceX.NET/GetCurrencyCodeByCurrencyName" name="GetCurrencyCodeByCurrencyName" bindingOperationName="GetCurrencyCodeByCurrencyName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a32c98bb-eeb9-4218-9acd-2293eeb781c2" isOneWay="false" action="http://www.webserviceX.NET/GetGMTbyCountry" name="GetGMTbyCountry" bindingOperationName="GetGMTbyCountry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff544711-addb-4d4f-adc3-425edb1cbe8a" isOneWay="false" action="http://www.webserviceX.NET/GetISD" name="GetISD" bindingOperationName="GetISD" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f409750-12e1-493a-9f10-5b849ff4d6a8" isOneWay="false" action="http://www.webserviceX.NET/GetISOCountryCodeByCountyName" name="GetISOCountryCodeByCountyName" bindingOperationName="GetISOCountryCodeByCountyName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite id="a12067f8-fd6d-44d9-82dd-339a2618eb8b" name="DataDrivenExample1"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="298812af-ae88-4be4-ac86-a0c2f2338430" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase 1" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" name="GetCountriesSoapRequest" id="c0133953-dfdc-469a-907f-ec454313c507"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCountries</con:operation><con:request name="GetCountriesSoapRequest" id="d5d33fc4-9a00-41d6-b0fa-9d75222d5de3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCountries/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9ca86e29-6ccf-43d4-8f3d-b6b8ab6c6170"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties" id="a46e1946-fa5e-40c9-b124-9dd0efbe9ba5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Temp1</con:name><con:value><![CDATA[<NewDataSet>
  <Table>
    <Name>Afghanistan, Islamic State of</Name>
  </Table>
  <Table>
    <Name>Albania</Name>
  </Table>
  <Table>
    <Name>Algeria</Name>
  </Table>
  <Table>
    <Name>American Samoa</Name>
  </Table>
  <Table>
    <Name>Andorra, Principality of</Name>
  </Table>
  <Table>
    <Name>Angola</Name>
  </Table>
  <Table>
    <Name>Anguilla</Name>
  </Table>
  <Table>
    <Name>Antarctica</Name>
  </Table>
  <Table>
    <Name>Antigua and Barbuda</Name>
  </Table>
  <Table>
    <Name>Argentina</Name>
  </Table>
  <Table>
    <Name>Armenia</Name>
  </Table>
  <Table>
    <Name>Aruba</Name>
  </Table>
  <Table>
    <Name>Australia</Name>
  </Table>
  <Table>
    <Name>Austria</Name>
  </Table>
  <Table>
    <Name>Azerbaidjan</Name>
  </Table>
  <Table>
    <Name>Bahamas</Name>
  </Table>
  <Table>
    <Name>Bahrain</Name>
  </Table>
  <Table>
    <Name>Bangladesh</Name>
  </Table>
  <Table>
    <Name>Barbados</Name>
  </Table>
  <Table>
    <Name>Belarus</Name>
  </Table>
  <Table>
    <Name>Belgium</Name>
  </Table>
  <Table>
    <Name>Belize</Name>
  </Table>
  <Table>
    <Name>Benin</Name>
  </Table>
  <Table>
    <Name>Bermuda</Name>
  </Table>
  <Table>
    <Name>Bhutan</Name>
  </Table>
  <Table>
    <Name>Bolivia</Name>
  </Table>
  <Table>
    <Name>Bosnia-Herzegovina</Name>
  </Table>
  <Table>
    <Name>Botswana</Name>
  </Table>
  <Table>
    <Name>Bouvet Island</Name>
  </Table>
  <Table>
    <Name>Brazil</Name>
  </Table>
  <Table>
    <Name>British Indian Ocean Territory</Name>
  </Table>
  <Table>
    <Name>Brunei Darussalam</Name>
  </Table>
  <Table>
    <Name>Bulgaria</Name>
  </Table>
  <Table>
    <Name>Burkina Faso</Name>
  </Table>
  <Table>
    <Name>Burundi</Name>
  </Table>
  <Table>
    <Name>Cambodia, Kingdom of</Name>
  </Table>
  <Table>
    <Name>Cameroon</Name>
  </Table>
  <Table>
    <Name>Canada</Name>
  </Table>
  <Table>
    <Name>Cape Verde</Name>
  </Table>
  <Table>
    <Name>Cayman Islands</Name>
  </Table>
  <Table>
    <Name>Central African Republic</Name>
  </Table>
  <Table>
    <Name>Chad</Name>
  </Table>
  <Table>
    <Name>Chile</Name>
  </Table>
  <Table>
    <Name>China</Name>
  </Table>
  <Table>
    <Name>Christmas Island</Name>
  </Table>
  <Table>
    <Name>Cocos (Keeling) Islands</Name>
  </Table>
  <Table>
    <Name>Colombia</Name>
  </Table>
  <Table>
    <Name>Comoros</Name>
  </Table>
  <Table>
    <Name>Congo</Name>
  </Table>
  <Table>
    <Name>Congo, The Democratic Republic of the</Name>
  </Table>
  <Table>
    <Name>Cook Islands</Name>
  </Table>
  <Table>
    <Name>Costa Rica</Name>
  </Table>
  <Table>
    <Name>Croatia</Name>
  </Table>
  <Table>
    <Name>Cuba</Name>
  </Table>
  <Table>
    <Name>Cyprus</Name>
  </Table>
  <Table>
    <Name>Czech Republic</Name>
  </Table>
  <Table>
    <Name>Denmark</Name>
  </Table>
  <Table>
    <Name>Djibouti</Name>
  </Table>
  <Table>
    <Name>Dominica</Name>
  </Table>
  <Table>
    <Name>Dominican Republic</Name>
  </Table>
  <Table>
    <Name>East Timor</Name>
  </Table>
  <Table>
    <Name>Ecuador</Name>
  </Table>
  <Table>
    <Name>Egypt</Name>
  </Table>
  <Table>
    <Name>El Salvador</Name>
  </Table>
  <Table>
    <Name>Equatorial Guinea</Name>
  </Table>
  <Table>
    <Name>Eritrea</Name>
  </Table>
  <Table>
    <Name>Estonia</Name>
  </Table>
  <Table>
    <Name>Ethiopia</Name>
  </Table>
  <Table>
    <Name>Falkland Islands</Name>
  </Table>
  <Table>
    <Name>Faroe Islands</Name>
  </Table>
  <Table>
    <Name>Fiji</Name>
  </Table>
  <Table>
    <Name>Finland</Name>
  </Table>
  <Table>
    <Name>Former Czechoslovakia</Name>
  </Table>
  <Table>
    <Name>Former USSR</Name>
  </Table>
  <Table>
    <Name>France</Name>
  </Table>
  <Table>
    <Name>France (European Territory)</Name>
  </Table>
  <Table>
    <Name>French Guyana</Name>
  </Table>
  <Table>
    <Name>French Southern Territories</Name>
  </Table>
  <Table>
    <Name>Gabon</Name>
  </Table>
  <Table>
    <Name>Gambia</Name>
  </Table>
  <Table>
    <Name>Georgia</Name>
  </Table>
  <Table>
    <Name>Germany</Name>
  </Table>
  <Table>
    <Name>Ghana</Name>
  </Table>
  <Table>
    <Name>Gibraltar</Name>
  </Table>
  <Table>
    <Name>Great Britain</Name>
  </Table>
  <Table>
    <Name>Greece</Name>
  </Table>
  <Table>
    <Name>Greenland</Name>
  </Table>
  <Table>
    <Name>Grenada</Name>
  </Table>
  <Table>
    <Name>Guadeloupe (French)</Name>
  </Table>
  <Table>
    <Name>Guam (USA)</Name>
  </Table>
  <Table>
    <Name>Guatemala</Name>
  </Table>
  <Table>
    <Name>Guinea</Name>
  </Table>
  <Table>
    <Name>Guinea Bissau</Name>
  </Table>
  <Table>
    <Name>Guyana</Name>
  </Table>
  <Table>
    <Name>Haiti</Name>
  </Table>
  <Table>
    <Name>Heard and McDonald Islands</Name>
  </Table>
  <Table>
    <Name>Holy See (Vatican City State)</Name>
  </Table>
  <Table>
    <Name>Honduras</Name>
  </Table>
  <Table>
    <Name>Hong Kong</Name>
  </Table>
  <Table>
    <Name>Hungary</Name>
  </Table>
  <Table>
    <Name>Iceland</Name>
  </Table>
  <Table>
    <Name>India</Name>
  </Table>
  <Table>
    <Name>Indonesia</Name>
  </Table>
  <Table>
    <Name>Iran</Name>
  </Table>
  <Table>
    <Name>Iraq</Name>
  </Table>
  <Table>
    <Name>Ireland</Name>
  </Table>
  <Table>
    <Name>Israel</Name>
  </Table>
  <Table>
    <Name>Italy</Name>
  </Table>
  <Table>
    <Name>Ivory Coast (Cote D'Ivoire)</Name>
  </Table>
  <Table>
    <Name>Jamaica</Name>
  </Table>
  <Table>
    <Name>Japan</Name>
  </Table>
  <Table>
    <Name>Jordan</Name>
  </Table>
  <Table>
    <Name>Kazakhstan</Name>
  </Table>
  <Table>
    <Name>Kenya</Name>
  </Table>
  <Table>
    <Name>Kiribati</Name>
  </Table>
  <Table>
    <Name>Kuwait</Name>
  </Table>
  <Table>
    <Name>Kyrgyz Republic (Kyrgyzstan)</Name>
  </Table>
  <Table>
    <Name>Laos</Name>
  </Table>
  <Table>
    <Name>Latvia</Name>
  </Table>
  <Table>
    <Name>Lebanon</Name>
  </Table>
  <Table>
    <Name>Lesotho</Name>
  </Table>
  <Table>
    <Name>Liberia</Name>
  </Table>
  <Table>
    <Name>Libya</Name>
  </Table>
  <Table>
    <Name>Liechtenstein</Name>
  </Table>
  <Table>
    <Name>Lithuania</Name>
  </Table>
  <Table>
    <Name>Luxembourg</Name>
  </Table>
  <Table>
    <Name>Macau</Name>
  </Table>
  <Table>
    <Name>Macedonia</Name>
  </Table>
  <Table>
    <Name>Madagascar</Name>
  </Table>
  <Table>
    <Name>Malawi</Name>
  </Table>
  <Table>
    <Name>Malaysia</Name>
  </Table>
  <Table>
    <Name>Maldives</Name>
  </Table>
  <Table>
    <Name>Mali</Name>
  </Table>
  <Table>
    <Name>Malta</Name>
  </Table>
  <Table>
    <Name>Marshall Islands</Name>
  </Table>
  <Table>
    <Name>Martinique (French)</Name>
  </Table>
  <Table>
    <Name>Mauritania</Name>
  </Table>
  <Table>
    <Name>Mauritius</Name>
  </Table>
  <Table>
    <Name>Mayotte</Name>
  </Table>
  <Table>
    <Name>Mexico</Name>
  </Table>
  <Table>
    <Name>Micronesia</Name>
  </Table>
  <Table>
    <Name>Moldavia</Name>
  </Table>
  <Table>
    <Name>Monaco</Name>
  </Table>
  <Table>
    <Name>Mongolia</Name>
  </Table>
  <Table>
    <Name>Montserrat</Name>
  </Table>
  <Table>
    <Name>Morocco</Name>
  </Table>
  <Table>
    <Name>Mozambique</Name>
  </Table>
  <Table>
    <Name>Myanmar</Name>
  </Table>
  <Table>
    <Name>Namibia</Name>
  </Table>
  <Table>
    <Name>Nauru</Name>
  </Table>
  <Table>
    <Name>Nepal</Name>
  </Table>
  <Table>
    <Name>Netherlands</Name>
  </Table>
  <Table>
    <Name>Netherlands Antilles</Name>
  </Table>
  <Table>
    <Name>Neutral Zone</Name>
  </Table>
  <Table>
    <Name>New Caledonia (French)</Name>
  </Table>
  <Table>
    <Name>New Zealand</Name>
  </Table>
  <Table>
    <Name>Nicaragua</Name>
  </Table>
  <Table>
    <Name>Niger</Name>
  </Table>
  <Table>
    <Name>Nigeria</Name>
  </Table>
  <Table>
    <Name>Niue</Name>
  </Table>
  <Table>
    <Name>Norfolk Island</Name>
  </Table>
  <Table>
    <Name>North Korea</Name>
  </Table>
  <Table>
    <Name>Northern Mariana Islands</Name>
  </Table>
  <Table>
    <Name>Norway</Name>
  </Table>
  <Table>
    <Name>Oman</Name>
  </Table>
  <Table>
    <Name>Pakistan</Name>
  </Table>
  <Table>
    <Name>Palau</Name>
  </Table>
  <Table>
    <Name>Panama</Name>
  </Table>
  <Table>
    <Name>Papua New Guinea</Name>
  </Table>
  <Table>
    <Name>Paraguay</Name>
  </Table>
  <Table>
    <Name>Peru</Name>
  </Table>
  <Table>
    <Name>Philippines</Name>
  </Table>
  <Table>
    <Name>Pitcairn Island</Name>
  </Table>
  <Table>
    <Name>Poland</Name>
  </Table>
  <Table>
    <Name>Polynesia (French)</Name>
  </Table>
  <Table>
    <Name>Portugal</Name>
  </Table>
  <Table>
    <Name>Puerto Rico</Name>
  </Table>
  <Table>
    <Name>Qatar</Name>
  </Table>
  <Table>
    <Name>Reunion (French)</Name>
  </Table>
  <Table>
    <Name>Romania</Name>
  </Table>
  <Table>
    <Name>Russian Federation</Name>
  </Table>
  <Table>
    <Name>Rwanda</Name>
  </Table>
  <Table>
    <Name>S. Georgia &amp; S. Sandwich Isls.</Name>
  </Table>
  <Table>
    <Name>Saint Helena</Name>
  </Table>
  <Table>
    <Name>Saint Kitts &amp; Nevis Anguilla</Name>
  </Table>
  <Table>
    <Name>Saint Lucia</Name>
  </Table>
  <Table>
    <Name>Saint Pierre and Miquelon</Name>
  </Table>
  <Table>
    <Name>Saint Tome (Sao Tome) and Principe</Name>
  </Table>
  <Table>
    <Name>Saint Vincent &amp; Grenadines</Name>
  </Table>
  <Table>
    <Name>Samoa</Name>
  </Table>
  <Table>
    <Name>San Marino</Name>
  </Table>
  <Table>
    <Name>Saudi Arabia</Name>
  </Table>
  <Table>
    <Name>Senegal</Name>
  </Table>
  <Table>
    <Name>Seychelles</Name>
  </Table>
  <Table>
    <Name>Sierra Leone</Name>
  </Table>
  <Table>
    <Name>Singapore</Name>
  </Table>
  <Table>
    <Name>Slovak Republic</Name>
  </Table>
  <Table>
    <Name>Slovenia</Name>
  </Table>
  <Table>
    <Name>Solomon Islands</Name>
  </Table>
  <Table>
    <Name>Somalia</Name>
  </Table>
  <Table>
    <Name>South Africa</Name>
  </Table>
  <Table>
    <Name>South Korea</Name>
  </Table>
  <Table>
    <Name>Spain</Name>
  </Table>
  <Table>
    <Name>Sri Lanka</Name>
  </Table>
  <Table>
    <Name>Sudan</Name>
  </Table>
  <Table>
    <Name>Suriname</Name>
  </Table>
  <Table>
    <Name>Svalbard and Jan Mayen Islands</Name>
  </Table>
  <Table>
    <Name>Swaziland</Name>
  </Table>
  <Table>
    <Name>Sweden</Name>
  </Table>
  <Table>
    <Name>Switzerland</Name>
  </Table>
  <Table>
    <Name>Syria</Name>
  </Table>
  <Table>
    <Name>Tadjikistan</Name>
  </Table>
  <Table>
    <Name>Taiwan</Name>
  </Table>
  <Table>
    <Name>Tanzania</Name>
  </Table>
  <Table>
    <Name>Thailand</Name>
  </Table>
  <Table>
    <Name>Togo</Name>
  </Table>
  <Table>
    <Name>Tokelau</Name>
  </Table>
  <Table>
    <Name>Tonga</Name>
  </Table>
  <Table>
    <Name>Trinidad and Tobago</Name>
  </Table>
  <Table>
    <Name>Tunisia</Name>
  </Table>
  <Table>
    <Name>Turkey</Name>
  </Table>
  <Table>
    <Name>Turkmenistan</Name>
  </Table>
  <Table>
    <Name>Turks and Caicos Islands</Name>
  </Table>
  <Table>
    <Name>Tuvalu</Name>
  </Table>
  <Table>
    <Name>Uganda</Name>
  </Table>
  <Table>
    <Name>Ukraine</Name>
  </Table>
  <Table>
    <Name>United Arab Emirates</Name>
  </Table>
  <Table>
    <Name>United Kingdom</Name>
  </Table>
  <Table>
    <Name>United States</Name>
  </Table>
  <Table>
    <Name>Uruguay</Name>
  </Table>
  <Table>
    <Name>USA Minor Outlying Islands</Name>
  </Table>
  <Table>
    <Name>Uzbekistan</Name>
  </Table>
  <Table>
    <Name>Vanuatu</Name>
  </Table>
  <Table>
    <Name>Venezuela</Name>
  </Table>
  <Table>
    <Name>Vietnam</Name>
  </Table>
  <Table>
    <Name>Virgin Islands (British)</Name>
  </Table>
  <Table>
    <Name>Virgin Islands (USA)</Name>
  </Table>
  <Table>
    <Name>Wallis and Futuna Islands</Name>
  </Table>
  <Table>
    <Name>Western Sahara</Name>
  </Table>
  <Table>
    <Name>Yemen</Name>
  </Table>
  <Table>
    <Name>Yugoslavia</Name>
  </Table>
  <Table>
    <Name>Zaire</Name>
  </Table>
  <Table>
    <Name>Zambia</Name>
  </Table>
  <Table>
    <Name>Zimbabwe</Name>
  </Table>
</NewDataSet>]]></con:value></con:property><con:property><con:name>CountryName</con:name><con:value>Argentina</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="bf3e16f9-8eb0-40d1-9b18-09ce7933f961"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ExtractCountriesResponse</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetCountriesSoapRequest</con:sourceStep><con:sourcePath>declare namespace ns1='http://www.webserviceX.NET';
//ns1:GetCountriesResponse[1]/ns1:GetCountriesResult[1]</con:sourcePath><con:targetType>Temp1</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="c2582a42-f4fa-4220-8358-74de25a0afce"><con:settings/><con:config><script>log.info("Hello World")
log.info(testRunner.testCase.testSuite.project.name)
log.info(testRunner.testCase.testSuite.name)
log.info(testRunner.testCase.name)
def tempPropertyValue = (testRunner.testCase.getTestStepByName("Properties").getProperty("Temp1").value)
def xmlResponse = context.expand('${GetCountriesSoapRequest#Response}')
def countriesXml = context.expand('${Properties#Temp1}')
//log.info(xmlResponse)
//log.info(countriesXml)
//log.info(tempPropertyValue)
//testRunner.cancel("I am Done")
//return
// create groovyUtils and XmlHolder for response of Request 1 request
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( countriesXml )
def count = 0;
 //loop item nodes in response message
for( item in holder.getNodeValues( "//Name" )){
	count++
	testRunner.testCase.getTestStepAt(1).setPropertyValue("CountryName",item)
	log.info ("Calling GetCurrencyByCountrySoapRequest for " + item)
	Thread.currentThread().sleep(1000)
  	testRunner.runTestStepByName("GetCurrencyByCountrySoapRequest" )
  	if(count == 10)
  	break
  	
}
testRunner.cancel("I am Done !")
    //log.info "Item : [$item]" 

//NumOfCountries</script></con:config></con:testStep><con:testStep type="request" name="GetCurrencyByCountrySoapRequest" id="5aaca3c9-ade4-48ce-92fb-dbf1a7836307"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencyByCountry</con:operation><con:request name="GetCurrencyByCountrySoapRequest" id="4eaf8f52-2192-4664-ab2d-4537fc65c408"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCurrencyByCountry><web:CountryName>${Properties#CountryName}</web:CountryName></web:GetCurrencyByCountry>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8fc053cc-2bf1-48cb-9487-e9365ec4d075"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testSuite = testRunner.testCase.testSuite
for(int i=0;i&lt;testSuite.getPropertyCount();i++)
{
 testSuite.getPropertyAt(i).setValue("");
}</con:setupScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>cf73d6d3-3f92-4744-bc99-1118bbacb49c</con:testStepId><con:status>ENABLED</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>14de38f5-ae7d-41d9-9fff-bd652efd5d4e</con:testStepId><con:status>ENABLED</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8fcbb90d-934f-42ff-ac25-7b2188d21fd5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58dc3712-59b3-427a-9f01-2ca2ead2fa2f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5393a433-a906-4bcc-89d1-685662198ba8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0133953-dfdc-469a-907f-ec454313c507</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a46e1946-fa5e-40c9-b124-9dd0efbe9ba5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf3e16f9-8eb0-40d1-9b18-09ce7933f961</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2582a42-f4fa-4220-8358-74de25a0afce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5aaca3c9-ade4-48ce-92fb-dbf1a7836307</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="82529b99-3472-4741-991e-8c72655e0f4c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase 2" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" name="GetCurrenciesSoapRequest" id="159f58dd-4215-4c3e-92cb-c2605a3ee37e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencies</con:operation><con:request name="GetCurrenciesSoapRequest" id="bb251bde-9847-45b6-9302-6d18dd2c2eba"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCurrencies/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a9adfd1c-7deb-4587-b9f1-aeea99c84f0f"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties" id="14504cb6-ba53-41d5-9cc5-8a22d7dc9e12"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Temp1</con:name><con:value><![CDATA[<NewDataSet>
  <Table>
    <Name>Afghanistan, Islamic State of</Name>
    <CountryCode>af</CountryCode>
    <Currency>Afghani</Currency>
    <CurrencyCode>AFA</CurrencyCode>
  </Table>
  <Table>
    <Name>Albania</Name>
    <CountryCode>al</CountryCode>
    <Currency>Lek</Currency>
    <CurrencyCode>ALL</CurrencyCode>
  </Table>
  <Table>
    <Name>Algeria</Name>
    <CountryCode>dz</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>DZD</CurrencyCode>
  </Table>
  <Table>
    <Name>American Samoa</Name>
    <CountryCode>as</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Andorra, Principality of</Name>
    <CountryCode>ad</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>ADF</CurrencyCode>
  </Table>
  <Table>
    <Name>Angola</Name>
    <CountryCode>ao</CountryCode>
    <Currency>New Kwanza</Currency>
    <CurrencyCode>AON</CurrencyCode>
  </Table>
  <Table>
    <Name>Anguilla</Name>
    <CountryCode>ai</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Antarctica</Name>
    <CountryCode>aq</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Antigua and Barbuda</Name>
    <CountryCode>ag</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Argentina</Name>
    <CountryCode>ar</CountryCode>
    <Currency>Peso </Currency>
    <CurrencyCode>ARS</CurrencyCode>
  </Table>
  <Table>
    <Name>Armenia</Name>
    <CountryCode>am</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Aruba</Name>
    <CountryCode>aw</CountryCode>
    <Currency>Florin </Currency>
    <CurrencyCode>AWG</CurrencyCode>
  </Table>
  <Table>
    <Name>Australia</Name>
    <CountryCode>au</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>AUD</CurrencyCode>
  </Table>
  <Table>
    <Name>Austria</Name>
    <CountryCode>at</CountryCode>
    <Currency>Schilling</Currency>
    <CurrencyCode>ATS</CurrencyCode>
  </Table>
  <Table>
    <Name>Azerbaidjan</Name>
    <CountryCode>az</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Bahamas</Name>
    <CountryCode>bs</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>BSD</CurrencyCode>
  </Table>
  <Table>
    <Name>Bahrain</Name>
    <CountryCode>bh</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>BHD</CurrencyCode>
  </Table>
  <Table>
    <Name>Bangladesh</Name>
    <CountryCode>bd</CountryCode>
    <Currency>Taka</Currency>
    <CurrencyCode>BDT</CurrencyCode>
  </Table>
  <Table>
    <Name>Barbados</Name>
    <CountryCode>bb</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>BBD</CurrencyCode>
  </Table>
  <Table>
    <Name>Belarus</Name>
    <CountryCode>by</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Belgium</Name>
    <CountryCode>be</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>BEF</CurrencyCode>
  </Table>
  <Table>
    <Name>Belize</Name>
    <CountryCode>bz</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>BZD</CurrencyCode>
  </Table>
  <Table>
    <Name>Benin</Name>
    <CountryCode>bj</CountryCode>
    <Currency>CFA Franc </Currency>
    <CurrencyCode>XOF</CurrencyCode>
  </Table>
  <Table>
    <Name>Bermuda</Name>
    <CountryCode>bm</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>BMD</CurrencyCode>
  </Table>
  <Table>
    <Name>Bhutan</Name>
    <CountryCode>bt</CountryCode>
    <Currency>Ngultrum</Currency>
    <CurrencyCode>BTN</CurrencyCode>
  </Table>
  <Table>
    <Name>Bolivia</Name>
    <CountryCode>bo</CountryCode>
    <Currency>Boliviano</Currency>
    <CurrencyCode>BOB</CurrencyCode>
  </Table>
  <Table>
    <Name>Bosnia-Herzegovina</Name>
    <CountryCode>ba</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Botswana</Name>
    <CountryCode>bw</CountryCode>
    <Currency>Pula</Currency>
    <CurrencyCode>BWP</CurrencyCode>
  </Table>
  <Table>
    <Name>Bouvet Island</Name>
    <CountryCode>bv</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Brazil</Name>
    <CountryCode>br</CountryCode>
    <Currency>Cruzeiro</Currency>
    <CurrencyCode>BRC</CurrencyCode>
  </Table>
  <Table>
    <Name>British Indian Ocean Territory</Name>
    <CountryCode>io</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Brunei Darussalam</Name>
    <CountryCode>bn</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>BND</CurrencyCode>
  </Table>
  <Table>
    <Name>Bulgaria</Name>
    <CountryCode>bg</CountryCode>
    <Currency>Lev</Currency>
    <CurrencyCode>BGL</CurrencyCode>
  </Table>
  <Table>
    <Name>Burkina Faso</Name>
    <CountryCode>bf</CountryCode>
    <Currency>CFA Franc </Currency>
    <CurrencyCode>XOF</CurrencyCode>
  </Table>
  <Table>
    <Name>Burundi</Name>
    <CountryCode>bi</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>BIF</CurrencyCode>
  </Table>
  <Table>
    <Name>Cambodia, Kingdom of</Name>
    <CountryCode>kh</CountryCode>
    <Currency>Riel </Currency>
    <CurrencyCode>KHR</CurrencyCode>
  </Table>
  <Table>
    <Name>Cameroon</Name>
    <CountryCode>cm</CountryCode>
    <Currency>CFA Franc </Currency>
    <CurrencyCode>XAF</CurrencyCode>
  </Table>
  <Table>
    <Name>Canada</Name>
    <CountryCode>ca</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>CAD</CurrencyCode>
  </Table>
  <Table>
    <Name>Cape Verde</Name>
    <CountryCode>cv</CountryCode>
    <Currency>Escudo</Currency>
    <CurrencyCode>CVE</CurrencyCode>
  </Table>
  <Table>
    <Name>Cayman Islands</Name>
    <CountryCode>ky</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>KYD</CurrencyCode>
  </Table>
  <Table>
    <Name>Central African Republic</Name>
    <CountryCode>cf</CountryCode>
    <Currency>CFA Franc </Currency>
    <CurrencyCode>XAF</CurrencyCode>
  </Table>
  <Table>
    <Name>Chad</Name>
    <CountryCode>td</CountryCode>
    <Currency>CFA Franc BEAC</Currency>
    <CurrencyCode>XAF</CurrencyCode>
  </Table>
  <Table>
    <Name>Chile</Name>
    <CountryCode>cl</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>CLP</CurrencyCode>
  </Table>
  <Table>
    <Name>China</Name>
    <CountryCode>cn</CountryCode>
    <Currency>Yuan Renminbi</Currency>
    <CurrencyCode>CNY</CurrencyCode>
  </Table>
  <Table>
    <Name>Christmas Island</Name>
    <CountryCode>cx</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Cocos (Keeling) Islands</Name>
    <CountryCode>cc</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Colombia</Name>
    <CountryCode>co</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>COP</CurrencyCode>
  </Table>
  <Table>
    <Name>Comoros</Name>
    <CountryCode>km</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>KMF</CurrencyCode>
  </Table>
  <Table>
    <Name>Congo</Name>
    <CountryCode>cg</CountryCode>
    <Currency>CFA Franc BEAC</Currency>
    <CurrencyCode>XAF</CurrencyCode>
  </Table>
  <Table>
    <Name>Congo, The Democratic Republic of the</Name>
    <CountryCode>cd</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Cook Islands</Name>
    <CountryCode>ck</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Costa Rica</Name>
    <CountryCode>cr</CountryCode>
    <Currency>Colon</Currency>
    <CurrencyCode>CRC</CurrencyCode>
  </Table>
  <Table>
    <Name>Croatia</Name>
    <CountryCode>hr</CountryCode>
    <Currency>Kuna</Currency>
    <CurrencyCode>HRK</CurrencyCode>
  </Table>
  <Table>
    <Name>Cuba</Name>
    <CountryCode>cu</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>CUP</CurrencyCode>
  </Table>
  <Table>
    <Name>Cyprus</Name>
    <CountryCode>cy</CountryCode>
    <Currency>Pound</Currency>
    <CurrencyCode>CVP</CurrencyCode>
  </Table>
  <Table>
    <Name>Czech Republic</Name>
    <CountryCode>cz</CountryCode>
    <Currency>Koruna</Currency>
    <CurrencyCode>CSK</CurrencyCode>
  </Table>
  <Table>
    <Name>Denmark</Name>
    <CountryCode>dk</CountryCode>
    <Currency>Guilder</Currency>
    <CurrencyCode>DKK</CurrencyCode>
  </Table>
  <Table>
    <Name>Djibouti</Name>
    <CountryCode>dj</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>DJF</CurrencyCode>
  </Table>
  <Table>
    <Name>Dominica</Name>
    <CountryCode>dm</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>DOP</CurrencyCode>
  </Table>
  <Table>
    <Name>Dominican Republic</Name>
    <CountryCode>do</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>DOP</CurrencyCode>
  </Table>
  <Table>
    <Name>East Timor</Name>
    <CountryCode>tp</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Ecuador</Name>
    <CountryCode>ec</CountryCode>
    <Currency>Sucre</Currency>
    <CurrencyCode>ECS</CurrencyCode>
  </Table>
  <Table>
    <Name>Egypt</Name>
    <CountryCode>eg</CountryCode>
    <Currency>Pound</Currency>
    <CurrencyCode>EGP</CurrencyCode>
  </Table>
  <Table>
    <Name>El Salvador</Name>
    <CountryCode>sv</CountryCode>
    <Currency>Colon</Currency>
    <CurrencyCode>SVC</CurrencyCode>
  </Table>
  <Table>
    <Name>Equatorial Guinea</Name>
    <CountryCode>gq</CountryCode>
    <Currency>CFA </Currency>
    <CurrencyCode>XAF</CurrencyCode>
  </Table>
  <Table>
    <Name>Eritrea</Name>
    <CountryCode>er</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Estonia</Name>
    <CountryCode>ee</CountryCode>
    <Currency>Kroon</Currency>
    <CurrencyCode>EEK</CurrencyCode>
  </Table>
  <Table>
    <Name>Ethiopia</Name>
    <CountryCode>et</CountryCode>
    <Currency>Birr</Currency>
    <CurrencyCode>ETB</CurrencyCode>
  </Table>
  <Table>
    <Name>Falkland Islands</Name>
    <CountryCode>fk</CountryCode>
    <Currency>Pound</Currency>
    <CurrencyCode>FKP</CurrencyCode>
  </Table>
  <Table>
    <Name>Faroe Islands</Name>
    <CountryCode>fo</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Fiji</Name>
    <CountryCode>fj</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>FJD</CurrencyCode>
  </Table>
  <Table>
    <Name>Finland</Name>
    <CountryCode>fi</CountryCode>
    <Currency>Markka</Currency>
    <CurrencyCode>FIM</CurrencyCode>
  </Table>
  <Table>
    <Name>Former Czechoslovakia</Name>
    <CountryCode>cs</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Former USSR</Name>
    <CountryCode>su</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>France</Name>
    <CountryCode>fr</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>FRF</CurrencyCode>
  </Table>
  <Table>
    <Name>France (European Territory)</Name>
    <CountryCode>fx</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>French Guyana</Name>
    <CountryCode>gf</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>French Southern Territories</Name>
    <CountryCode>tf</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Gabon</Name>
    <CountryCode>ga</CountryCode>
    <Currency>CFA Franc BEAC</Currency>
    <CurrencyCode>XAF</CurrencyCode>
  </Table>
  <Table>
    <Name>Gambia</Name>
    <CountryCode>gm</CountryCode>
    <Currency>Dalasi</Currency>
    <CurrencyCode>GMD</CurrencyCode>
  </Table>
  <Table>
    <Name>Georgia</Name>
    <CountryCode>ge</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Germany</Name>
    <CountryCode>de</CountryCode>
    <Currency>Mark</Currency>
    <CurrencyCode>DEM</CurrencyCode>
  </Table>
  <Table>
    <Name>Ghana</Name>
    <CountryCode>gh</CountryCode>
    <Currency>Cedi</Currency>
    <CurrencyCode>GHC</CurrencyCode>
  </Table>
  <Table>
    <Name>Gibraltar</Name>
    <CountryCode>gi</CountryCode>
    <Currency>Pound</Currency>
    <CurrencyCode>GIP</CurrencyCode>
  </Table>
  <Table>
    <Name>Great Britain</Name>
    <CountryCode>gb</CountryCode>
    <Currency>Sterling</Currency>
    <CurrencyCode>GBP</CurrencyCode>
  </Table>
  <Table>
    <Name>Greece</Name>
    <CountryCode>gr</CountryCode>
    <Currency>Drachma</Currency>
    <CurrencyCode>GRD</CurrencyCode>
  </Table>
  <Table>
    <Name>Greenland</Name>
    <CountryCode>gl</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Grenada</Name>
    <CountryCode>gd</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Guadeloupe (French)</Name>
    <CountryCode>gp</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Guam (USA)</Name>
    <CountryCode>gu</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Guatemala</Name>
    <CountryCode>gt</CountryCode>
    <Currency>Quetzal</Currency>
    <CurrencyCode>GTQ</CurrencyCode>
  </Table>
  <Table>
    <Name>Guinea</Name>
    <CountryCode>gn</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>GNF</CurrencyCode>
  </Table>
  <Table>
    <Name>Guinea Bissau</Name>
    <CountryCode>gw</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>GWP</CurrencyCode>
  </Table>
  <Table>
    <Name>Guyana</Name>
    <CountryCode>gy</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>GYD</CurrencyCode>
  </Table>
  <Table>
    <Name>Haiti</Name>
    <CountryCode>ht</CountryCode>
    <Currency>Gourde</Currency>
    <CurrencyCode>HTG</CurrencyCode>
  </Table>
  <Table>
    <Name>Heard and McDonald Islands</Name>
    <CountryCode>hm</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Holy See (Vatican City State)</Name>
    <CountryCode>va</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Honduras</Name>
    <CountryCode>hn</CountryCode>
    <Currency>Lempira</Currency>
    <CurrencyCode>HNL</CurrencyCode>
  </Table>
  <Table>
    <Name>Hong Kong</Name>
    <CountryCode>hk</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>HKD</CurrencyCode>
  </Table>
  <Table>
    <Name>Hungary</Name>
    <CountryCode>hu</CountryCode>
    <Currency>Forint</Currency>
    <CurrencyCode>HUF</CurrencyCode>
  </Table>
  <Table>
    <Name>Iceland</Name>
    <CountryCode>is</CountryCode>
    <Currency>Krona</Currency>
    <CurrencyCode>ISK</CurrencyCode>
  </Table>
  <Table>
    <Name>India</Name>
    <CountryCode>in</CountryCode>
    <Currency>Rupee</Currency>
    <CurrencyCode>INR</CurrencyCode>
  </Table>
  <Table>
    <Name>Indonesia</Name>
    <CountryCode>id</CountryCode>
    <Currency>Rupiah</Currency>
    <CurrencyCode>IDR</CurrencyCode>
  </Table>
  <Table>
    <Name>Iran</Name>
    <CountryCode>ir</CountryCode>
    <Currency>Rial</Currency>
    <CurrencyCode>IRR</CurrencyCode>
  </Table>
  <Table>
    <Name>Iraq</Name>
    <CountryCode>iq</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>IQD</CurrencyCode>
  </Table>
  <Table>
    <Name>Ireland</Name>
    <CountryCode>ie</CountryCode>
    <Currency>Punt</Currency>
    <CurrencyCode>IEP</CurrencyCode>
  </Table>
  <Table>
    <Name>Israel</Name>
    <CountryCode>il</CountryCode>
    <Currency>New Shekel</Currency>
    <CurrencyCode>ILS</CurrencyCode>
  </Table>
  <Table>
    <Name>Italy</Name>
    <CountryCode>it</CountryCode>
    <Currency>Lira</Currency>
    <CurrencyCode>ITL</CurrencyCode>
  </Table>
  <Table>
    <Name>Ivory Coast (Cote D'Ivoire)</Name>
    <CountryCode>ci</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Jamaica</Name>
    <CountryCode>jm</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>JMD</CurrencyCode>
  </Table>
  <Table>
    <Name>Japan</Name>
    <CountryCode>jp</CountryCode>
    <Currency>Yen</Currency>
    <CurrencyCode>JPY</CurrencyCode>
  </Table>
  <Table>
    <Name>Jordan</Name>
    <CountryCode>jo</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>JOD</CurrencyCode>
  </Table>
  <Table>
    <Name>Kazakhstan</Name>
    <CountryCode>kz</CountryCode>
    <Currency>Tenge</Currency>
    <CurrencyCode>KZT</CurrencyCode>
  </Table>
  <Table>
    <Name>Kenya</Name>
    <CountryCode>ke</CountryCode>
    <Currency>Schilling</Currency>
    <CurrencyCode>KES</CurrencyCode>
  </Table>
  <Table>
    <Name>Kiribati</Name>
    <CountryCode>ki</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Kuwait</Name>
    <CountryCode>kw</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>KWD</CurrencyCode>
  </Table>
  <Table>
    <Name>Kyrgyz Republic (Kyrgyzstan)</Name>
    <CountryCode>kg</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Laos</Name>
    <CountryCode>la</CountryCode>
    <Currency>Kip</Currency>
    <CurrencyCode>LAK</CurrencyCode>
  </Table>
  <Table>
    <Name>Latvia</Name>
    <CountryCode>lv</CountryCode>
    <Currency>Lats</Currency>
    <CurrencyCode>LVL</CurrencyCode>
  </Table>
  <Table>
    <Name>Lebanon</Name>
    <CountryCode>lb</CountryCode>
    <Currency>Pound</Currency>
    <CurrencyCode>LBP</CurrencyCode>
  </Table>
  <Table>
    <Name>Lesotho</Name>
    <CountryCode>ls</CountryCode>
    <Currency>Loti</Currency>
    <CurrencyCode>LSL</CurrencyCode>
  </Table>
  <Table>
    <Name>Liberia</Name>
    <CountryCode>lr</CountryCode>
    <Currency> Dollar</Currency>
    <CurrencyCode>LRD</CurrencyCode>
  </Table>
  <Table>
    <Name>Libya</Name>
    <CountryCode>ly</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>LYD</CurrencyCode>
  </Table>
  <Table>
    <Name>Liechtenstein</Name>
    <CountryCode>li</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Lithuania</Name>
    <CountryCode>lt</CountryCode>
    <Currency>Litas</Currency>
    <CurrencyCode>LTL</CurrencyCode>
  </Table>
  <Table>
    <Name>Luxembourg</Name>
    <CountryCode>lu</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>LUF</CurrencyCode>
  </Table>
  <Table>
    <Name>Macau</Name>
    <CountryCode>mo</CountryCode>
    <Currency>Pataca</Currency>
    <CurrencyCode>MOP</CurrencyCode>
  </Table>
  <Table>
    <Name>Macedonia</Name>
    <CountryCode>mk</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Madagascar</Name>
    <CountryCode>mg</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Malawi</Name>
    <CountryCode>mw</CountryCode>
    <Currency>Kwacha</Currency>
    <CurrencyCode>MWK</CurrencyCode>
  </Table>
  <Table>
    <Name>Malaysia</Name>
    <CountryCode>my</CountryCode>
    <Currency>Ringgit</Currency>
    <CurrencyCode>MYR</CurrencyCode>
  </Table>
  <Table>
    <Name>Maldives</Name>
    <CountryCode>mv</CountryCode>
    <Currency>Rufiyaa</Currency>
    <CurrencyCode>MVR</CurrencyCode>
  </Table>
  <Table>
    <Name>Mali</Name>
    <CountryCode>ml</CountryCode>
    <Currency>CFA Franc BCEAO</Currency>
    <CurrencyCode>XOF</CurrencyCode>
  </Table>
  <Table>
    <Name>Malta</Name>
    <CountryCode>mt</CountryCode>
    <Currency>Lira</Currency>
    <CurrencyCode>MTL</CurrencyCode>
  </Table>
  <Table>
    <Name>Marshall Islands</Name>
    <CountryCode>mh</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Martinique (French)</Name>
    <CountryCode>mq</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Mauritania</Name>
    <CountryCode>mr</CountryCode>
    <Currency>Ouguiya</Currency>
    <CurrencyCode>MRO</CurrencyCode>
  </Table>
  <Table>
    <Name>Mauritius</Name>
    <CountryCode>mu</CountryCode>
    <Currency>Rupee</Currency>
    <CurrencyCode>MUR</CurrencyCode>
  </Table>
  <Table>
    <Name>Mayotte</Name>
    <CountryCode>yt</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Mexico</Name>
    <CountryCode>mx</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>MXP</CurrencyCode>
  </Table>
  <Table>
    <Name>Micronesia</Name>
    <CountryCode>fm</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Moldavia</Name>
    <CountryCode>md</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Monaco</Name>
    <CountryCode>mc</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Mongolia</Name>
    <CountryCode>mn</CountryCode>
    <Currency>Tugrik</Currency>
    <CurrencyCode>MNT</CurrencyCode>
  </Table>
  <Table>
    <Name>Montserrat</Name>
    <CountryCode>ms</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Morocco</Name>
    <CountryCode>ma</CountryCode>
    <Currency>Dirham</Currency>
    <CurrencyCode>MAD</CurrencyCode>
  </Table>
  <Table>
    <Name>Mozambique</Name>
    <CountryCode>mz</CountryCode>
    <Currency>Metical</Currency>
    <CurrencyCode>MZM</CurrencyCode>
  </Table>
  <Table>
    <Name>Myanmar</Name>
    <CountryCode>mm</CountryCode>
    <Currency>Kyat</Currency>
    <CurrencyCode>MMK</CurrencyCode>
  </Table>
  <Table>
    <Name>Namibia</Name>
    <CountryCode>na</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Nauru</Name>
    <CountryCode>nr</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Nepal</Name>
    <CountryCode>np</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Netherlands</Name>
    <CountryCode>nl</CountryCode>
    <Currency>Guilder</Currency>
    <CurrencyCode>NLG</CurrencyCode>
  </Table>
  <Table>
    <Name>Netherlands Antilles</Name>
    <CountryCode>an</CountryCode>
    <Currency>Antillian Guilder</Currency>
    <CurrencyCode>ANG</CurrencyCode>
  </Table>
  <Table>
    <Name>Neutral Zone</Name>
    <CountryCode>nt</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>New Caledonia (French)</Name>
    <CountryCode>nc</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>New Zealand</Name>
    <CountryCode>nz</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>NZD</CurrencyCode>
  </Table>
  <Table>
    <Name>Nicaragua</Name>
    <CountryCode>ni</CountryCode>
    <Currency>Cordoba Oro</Currency>
    <CurrencyCode>NIO</CurrencyCode>
  </Table>
  <Table>
    <Name>Niger</Name>
    <CountryCode>ne</CountryCode>
    <Currency>CFA Franc</Currency>
    <CurrencyCode>XOF</CurrencyCode>
  </Table>
  <Table>
    <Name>Nigeria</Name>
    <CountryCode>ng</CountryCode>
    <Currency>Naira</Currency>
    <CurrencyCode>NGN</CurrencyCode>
  </Table>
  <Table>
    <Name>Niue</Name>
    <CountryCode>nu</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Norfolk Island</Name>
    <CountryCode>nf</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>North Korea</Name>
    <CountryCode>kp</CountryCode>
    <Currency>Won</Currency>
    <CurrencyCode>KPW</CurrencyCode>
  </Table>
  <Table>
    <Name>Northern Mariana Islands</Name>
    <CountryCode>mp</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Norway</Name>
    <CountryCode>no</CountryCode>
    <Currency>Kroner</Currency>
    <CurrencyCode>NOK</CurrencyCode>
  </Table>
  <Table>
    <Name>Oman</Name>
    <CountryCode>om</CountryCode>
    <Currency>Rial</Currency>
    <CurrencyCode>OMR</CurrencyCode>
  </Table>
  <Table>
    <Name>Pakistan</Name>
    <CountryCode>pk</CountryCode>
    <Currency>Rupee</Currency>
    <CurrencyCode>PKR</CurrencyCode>
  </Table>
  <Table>
    <Name>Palau</Name>
    <CountryCode>pw</CountryCode>
    <Currency>oz</Currency>
    <CurrencyCode>XPD</CurrencyCode>
  </Table>
  <Table>
    <Name>Panama</Name>
    <CountryCode>pa</CountryCode>
    <Currency>Balboa</Currency>
    <CurrencyCode>PAB</CurrencyCode>
  </Table>
  <Table>
    <Name>Papua New Guinea</Name>
    <CountryCode>pg</CountryCode>
    <Currency>Kina</Currency>
    <CurrencyCode>PGK</CurrencyCode>
  </Table>
  <Table>
    <Name>Paraguay</Name>
    <CountryCode>py</CountryCode>
    <Currency>Guarani</Currency>
    <CurrencyCode>PYG</CurrencyCode>
  </Table>
  <Table>
    <Name>Peru</Name>
    <CountryCode>pe</CountryCode>
    <Currency>Neuevo Sol</Currency>
    <CurrencyCode>PEN</CurrencyCode>
  </Table>
  <Table>
    <Name>Philippines</Name>
    <CountryCode>ph</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>PHP</CurrencyCode>
  </Table>
  <Table>
    <Name>Pitcairn Island</Name>
    <CountryCode>pn</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Poland</Name>
    <CountryCode>pl</CountryCode>
    <Currency>Zloty</Currency>
    <CurrencyCode>PLZ</CurrencyCode>
  </Table>
  <Table>
    <Name>Polynesia (French)</Name>
    <CountryCode>pf</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Portugal</Name>
    <CountryCode>pt</CountryCode>
    <Currency>Escudo</Currency>
    <CurrencyCode>PTE</CurrencyCode>
  </Table>
  <Table>
    <Name>Puerto Rico</Name>
    <CountryCode>pr</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Qatar</Name>
    <CountryCode>qa</CountryCode>
    <Currency>Rial</Currency>
    <CurrencyCode>QAR</CurrencyCode>
  </Table>
  <Table>
    <Name>Reunion (French)</Name>
    <CountryCode>re</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Romania</Name>
    <CountryCode>ro</CountryCode>
    <Currency>Leu</Currency>
    <CurrencyCode>ROL</CurrencyCode>
  </Table>
  <Table>
    <Name>Russian Federation</Name>
    <CountryCode>ru</CountryCode>
    <Currency>Rouble</Currency>
    <CurrencyCode>RUB</CurrencyCode>
  </Table>
  <Table>
    <Name>Rwanda</Name>
    <CountryCode>rw</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>S. Georgia &amp; S. Sandwich Isls.</Name>
    <CountryCode>gs</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Saint Helena</Name>
    <CountryCode>sh</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Saint Kitts &amp; Nevis Anguilla</Name>
    <CountryCode>kn</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Saint Lucia</Name>
    <CountryCode>lc</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Saint Pierre and Miquelon</Name>
    <CountryCode>pm</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Saint Tome (Sao Tome) and Principe</Name>
    <CountryCode>st</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Saint Vincent &amp; Grenadines</Name>
    <CountryCode>vc</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Samoa</Name>
    <CountryCode>ws</CountryCode>
    <Currency>Tala</Currency>
    <CurrencyCode>WST</CurrencyCode>
  </Table>
  <Table>
    <Name>San Marino</Name>
    <CountryCode>sm</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Saudi Arabia</Name>
    <CountryCode>sa</CountryCode>
    <Currency>Riyal</Currency>
    <CurrencyCode>SAR</CurrencyCode>
  </Table>
  <Table>
    <Name>Senegal</Name>
    <CountryCode>sn</CountryCode>
    <Currency>CFA Franc </Currency>
    <CurrencyCode>XOF</CurrencyCode>
  </Table>
  <Table>
    <Name>Seychelles</Name>
    <CountryCode>sc</CountryCode>
    <Currency>Rupee</Currency>
    <CurrencyCode>SCR</CurrencyCode>
  </Table>
  <Table>
    <Name>Sierra Leone</Name>
    <CountryCode>sl</CountryCode>
    <Currency>Leone</Currency>
    <CurrencyCode>SLL</CurrencyCode>
  </Table>
  <Table>
    <Name>Singapore</Name>
    <CountryCode>sg</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>SGD</CurrencyCode>
  </Table>
  <Table>
    <Name>Slovak Republic</Name>
    <CountryCode>sk</CountryCode>
    <Currency>Koruna</Currency>
    <CurrencyCode>SKK</CurrencyCode>
  </Table>
  <Table>
    <Name>Slovenia</Name>
    <CountryCode>si</CountryCode>
    <Currency>Tolar</Currency>
    <CurrencyCode>SIT</CurrencyCode>
  </Table>
  <Table>
    <Name>Solomon Islands</Name>
    <CountryCode>sb</CountryCode>
    <Currency> Dollar</Currency>
    <CurrencyCode>SBD</CurrencyCode>
  </Table>
  <Table>
    <Name>Somalia</Name>
    <CountryCode>so</CountryCode>
    <Currency>Schilling</Currency>
    <CurrencyCode>SOS</CurrencyCode>
  </Table>
  <Table>
    <Name>South Africa</Name>
    <CountryCode>za</CountryCode>
    <Currency>Rand</Currency>
    <CurrencyCode>ZAR</CurrencyCode>
  </Table>
  <Table>
    <Name>South Korea</Name>
    <CountryCode>kr</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Spain</Name>
    <CountryCode>es</CountryCode>
    <Currency>Peseta</Currency>
    <CurrencyCode>ESP</CurrencyCode>
  </Table>
  <Table>
    <Name>Sri Lanka</Name>
    <CountryCode>lk</CountryCode>
    <Currency>Rupee</Currency>
    <CurrencyCode>LKR</CurrencyCode>
  </Table>
  <Table>
    <Name>Sudan</Name>
    <CountryCode>sd</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>SDD</CurrencyCode>
  </Table>
  <Table>
    <Name>Suriname</Name>
    <CountryCode>sr</CountryCode>
    <Currency>Guilder</Currency>
    <CurrencyCode>SRG</CurrencyCode>
  </Table>
  <Table>
    <Name>Svalbard and Jan Mayen Islands</Name>
    <CountryCode>sj</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Swaziland</Name>
    <CountryCode>sz</CountryCode>
    <Currency>Lilangeni</Currency>
    <CurrencyCode>SZL</CurrencyCode>
  </Table>
  <Table>
    <Name>Sweden</Name>
    <CountryCode>se</CountryCode>
    <Currency>Krona</Currency>
    <CurrencyCode>SEK</CurrencyCode>
  </Table>
  <Table>
    <Name>Switzerland</Name>
    <CountryCode>ch</CountryCode>
    <Currency>Franc</Currency>
    <CurrencyCode>CHF</CurrencyCode>
  </Table>
  <Table>
    <Name>Syria</Name>
    <CountryCode>sy</CountryCode>
    <Currency>Pound</Currency>
    <CurrencyCode>SYP</CurrencyCode>
  </Table>
  <Table>
    <Name>Tadjikistan</Name>
    <CountryCode>tj</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Taiwan</Name>
    <CountryCode>tw</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>TWD</CurrencyCode>
  </Table>
  <Table>
    <Name>Tanzania</Name>
    <CountryCode>tz</CountryCode>
    <Currency>Schilling</Currency>
    <CurrencyCode>TZS</CurrencyCode>
  </Table>
  <Table>
    <Name>Thailand</Name>
    <CountryCode>th</CountryCode>
    <Currency>Baht</Currency>
    <CurrencyCode>THB</CurrencyCode>
  </Table>
  <Table>
    <Name>Togo</Name>
    <CountryCode>tg</CountryCode>
    <Currency>CFA Franc BCEAO</Currency>
    <CurrencyCode>XOF</CurrencyCode>
  </Table>
  <Table>
    <Name>Tokelau</Name>
    <CountryCode>tk</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Tonga</Name>
    <CountryCode>to</CountryCode>
    <Currency>Pa'anga</Currency>
    <CurrencyCode>TOP</CurrencyCode>
  </Table>
  <Table>
    <Name>Trinidad and Tobago</Name>
    <CountryCode>tt</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>TTD</CurrencyCode>
  </Table>
  <Table>
    <Name>Tunisia</Name>
    <CountryCode>tn</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>TND</CurrencyCode>
  </Table>
  <Table>
    <Name>Turkey</Name>
    <CountryCode>tr</CountryCode>
    <Currency>Lira</Currency>
    <CurrencyCode>TRL</CurrencyCode>
  </Table>
  <Table>
    <Name>Turkmenistan</Name>
    <CountryCode>tm</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Turks and Caicos Islands</Name>
    <CountryCode>tc</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Tuvalu</Name>
    <CountryCode>tv</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Uganda</Name>
    <CountryCode>ug</CountryCode>
    <Currency>Schilling</Currency>
    <CurrencyCode>UGS</CurrencyCode>
  </Table>
  <Table>
    <Name>Ukraine</Name>
    <CountryCode>ua</CountryCode>
    <Currency>Hryvnia</Currency>
    <CurrencyCode>UAG</CurrencyCode>
  </Table>
  <Table>
    <Name>United Arab Emirates</Name>
    <CountryCode>ae</CountryCode>
    <Currency>Dirham</Currency>
    <CurrencyCode>AED</CurrencyCode>
  </Table>
  <Table>
    <Name>United Kingdom</Name>
    <CountryCode>uk</CountryCode>
    <Currency>Pound</Currency>
    <CurrencyCode>GBP</CurrencyCode>
  </Table>
  <Table>
    <Name>United States</Name>
    <CountryCode>us</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>USD</CurrencyCode>
  </Table>
  <Table>
    <Name>Uruguay</Name>
    <CountryCode>uy</CountryCode>
    <Currency>Peso</Currency>
    <CurrencyCode>UYP</CurrencyCode>
  </Table>
  <Table>
    <Name>USA Minor Outlying Islands</Name>
    <CountryCode>um</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Uzbekistan</Name>
    <CountryCode>uz</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Vanuatu</Name>
    <CountryCode>vu</CountryCode>
    <Currency>Vatu</Currency>
    <CurrencyCode>VUV</CurrencyCode>
  </Table>
  <Table>
    <Name>Venezuela</Name>
    <CountryCode>ve</CountryCode>
    <Currency>Bolivar</Currency>
    <CurrencyCode>VEB</CurrencyCode>
  </Table>
  <Table>
    <Name>Vietnam</Name>
    <CountryCode>vn</CountryCode>
    <Currency>Dong</Currency>
    <CurrencyCode>VND</CurrencyCode>
  </Table>
  <Table>
    <Name>Virgin Islands (British)</Name>
    <CountryCode>vg</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Virgin Islands (USA)</Name>
    <CountryCode>vi</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Wallis and Futuna Islands</Name>
    <CountryCode>wf</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Western Sahara</Name>
    <CountryCode>eh</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Yemen</Name>
    <CountryCode>ye</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Yugoslavia</Name>
    <CountryCode>yu</CountryCode>
    <Currency>Dinar</Currency>
    <CurrencyCode>YUN</CurrencyCode>
  </Table>
  <Table>
    <Name>Zaire</Name>
    <CountryCode>zr</CountryCode>
    <Currency />
    <CurrencyCode />
  </Table>
  <Table>
    <Name>Zambia</Name>
    <CountryCode>zm</CountryCode>
    <Currency>Kwacha</Currency>
    <CurrencyCode>ZMK</CurrencyCode>
  </Table>
  <Table>
    <Name>Zimbabwe</Name>
    <CountryCode>zw</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>ZWD</CurrencyCode>
  </Table>
</NewDataSet>]]></con:value></con:property><con:property><con:name>CountryName</con:name><con:value>Zimbabwe</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="b2963275-51b7-4858-9c9a-289933eabe9b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ExtractCurrencyResponse</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetCurrenciesSoapRequest</con:sourceStep><con:sourcePath>declare namespace ns1='http://www.webserviceX.NET';
//ns1:GetCurrenciesResponse[1]/ns1:GetCurrenciesResult[1]</con:sourcePath><con:targetType>Temp1</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script-Slurper" id="75be28a5-bad1-48b4-9600-530bbe92676a"><con:settings/><con:config><script>def countriesXml = context.expand('${Properties#Temp1}')
def wsdl=new XmlSlurper().parseText(countriesXml)
def count = 0;
  
wsdl.Table.each { Table ->
     count++
     log.info("&lt;"+Table.Name+">.........&lt;"+Table.CountryCode+">.........&lt;"+Table.Currency+">.........&lt;"+Table.CurrencyCode+">")
	testRunner.testCase.getTestStepByName("Properties").setPropertyValue("CountryName",Table.Name.toString())
	Thread.currentThread().sleep(1000)
  	testRunner.runTestStepByName("GetCurrencyByCountrySoapRequest" )
  	// TODO: Add Assertion logic to compare the response with first service call data
  	if(count == 10)
  		return
}

testRunner.cancel("I am Done !")
/*
pers.NewDataSet.Table.each{Table-> 
Table.children().each{ tag->
log.info("${tag.name()}: ${tag.text()}"
}
*/
/*
       Table.Name.findAll{ name->
       log.info(name)
       }
*/


</script></con:config></con:testStep><con:testStep type="request" name="GetCurrencyByCountrySoapRequest" id="f8f4283b-6763-40ca-8068-53eb6673d4f8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencyByCountry</con:operation><con:request name="GetCurrencyByCountrySoapRequest" id="4eaf8f52-2192-4664-ab2d-4537fc65c408"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCurrencyByCountry><web:CountryName>${Properties#CountryName}</web:CountryName></web:GetCurrencyByCountry>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8fc053cc-2bf1-48cb-9487-e9365ec4d075"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="63893a33-bd55-48a8-9db9-e0cead1fcd31"><con:settings/><con:config><script>log.info("Hello World")
log.info(testRunner.testCase.testSuite.project.name)
log.info(testRunner.testCase.testSuite.name)
log.info(testRunner.testCase.name)
def tempPropertyValue = (testRunner.testCase.getTestStepByName("Properties").getProperty("Temp1").value)
def xmlResponse = context.expand('${GetCurrenciesSoapRequest#Response}')
def countriesXml = context.expand('${Properties#Temp1}')
//log.info(xmlResponse)
//log.info(countriesXml)
//log.info(tempPropertyValue)
//testRunner.cancel("I am Done")
//return
// create groovyUtils and XmlHolder for response of Request 1 request
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( countriesXml )
def count = 0;
 //loop item nodes in response message
//holder.getXmlObject().execQuery( "//Table" )
for( item in holder.getDomNodes("//Table" )){
	count++
	log.info ("Calling item for " + item)//getFirstChild().getNodeValue()  getNodeName()
	def abc = item.toString()
		def holder1 = groovyUtils.getXmlHolder( abc)
		def name = holder1.getNodeValue( "//Name" )
		def countryCode = holder1.getNodeValue( "//CountryCode" )
		def currency = holder1.getNodeValue( "//Currency" )
		def currencyCode = holder1.getNodeValue( "//CurrencyCode" )
	log.info(name +" === "+ countryCode)

	/// TODO Add Assertion logic here
	/*
	def holder1 = groovyUtils.getXmlHolder( item )
	for( name in holder1.getNodeValues( "//Name" )){
		log.info ("Calling GetCurrencyByCountrySoapRequest for " + name)
	}

		for(child in item.getChildNodes()){
		if(child.getNodeType() == 1)
		//log.info(child.getTextContent())
	}
	*/
	testRunner.testCase.getTestStepAt(1).setPropertyValue("CountryName",item)
	Thread.currentThread().sleep(1000)
  	testRunner.runTestStepByName("GetCurrencyByCountrySoapRequest" )
  	if(count == 10)
  	break
  	
}
testRunner.cancel("I am Done !")
    //log.info "Item : [$item]" 

//NumOfCountries</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>75be28a5-bad1-48b4-9600-530bbe92676a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>63893a33-bd55-48a8-9db9-e0cead1fcd31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="031ca4f8-ed87-4541-986f-4930519af033" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase 3" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="WSDLParserScript" id="12ffa233-f641-4086-803a-3441a7e95622"><con:settings/><con:config><script>        def wsdl = new XmlSlurper().parse("http://www.webservicex.com/globalweather.asmx?WSDL")
        
        wsdl.message.each { message ->
            log.info(" message.name = "+message.@'name')	
            log.info("    part.name = " + message.part.@'name')
             log.info("    part.element = " + message.part.@'element')
        }
/*
                wsdl.types.schema.element.each { message ->
            log.info(" message.name = "+message.@'name')	
            //println "    part.name = " + message.part.@'name'
            //println "    part.element = " + message.part.@'element'
        }*/</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="22486846-0fda-4cd9-ab6c-332b4adb0ef9" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase 4" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="DriverScript" id="9f2860a3-dab2-40a5-8c99-d99c57eb918a"><con:settings/><con:config><script>import java.io.*
import jxl.*
import jxl.write.*

def f = new File("c:\\nitin\\work\\soapui\\maven\\DataDrivenProject\\SmokeTests.xls")
def wk = Workbook.getWorkbook(f)
def ws = wk.getSheet("Sheet1")
def rows = ws.getRows()
def cols = ws.getColumns()
log.info("Rows = "+rows)
log.info("Cols = "+cols)
/*
for( def r=1;r&lt;rows;r++){
	for (def col=1;col&lt;4;col++){
		log.info(ws.getCell(col,r))
	}
}
*/
for( def i=1;i&lt;rows;i++){
	Cell statusCell = ws.getCell(2,i)
	log.info("Cell  "+statusCell.getContents())
	if(statusCell.getContents().equalsIgnoreCase("Y")){
		Cell testDataCell = ws.getCell(3,i)
		testRunner.testCase.getTestStepByName("Properties").setPropertyValue("testData",testDataCell.getContents())
		Cell stepNameCell = ws.getCell(1,i)
		log.info("Executing "+stepNameCell.getContents())
		testRunner.runTestStepByName(stepNameCell.getContents())
	}
}
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="d2769bba-a5dc-4123-af5b-acb88bce240e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>testData</con:name><con:value>Lira</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="GetCountries" id="446f8520-7ab8-4444-9d86-4b571c357a36" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCountries</con:operation><con:request name="GetCountries" id="db31e947-b810-462e-9184-602a6fa61592"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCountries/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5f3cb3d5-6989-42df-8e37-396e2444b19a"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCurrencies" id="14cd9287-eaa1-4d0d-bc6d-ab3763e1a788" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencies</con:operation><con:request name="GetCurrencies" id="7ca564aa-d040-4f12-8e04-afb7dc4cca03"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCurrencies/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="954359eb-1b5e-41ee-9467-e2efd3b5bcf5"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCurrencyCode" id="2211fc90-e858-4ae5-be46-8f9884d9dcfa" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencyCode</con:operation><con:request name="GetCurrencyCode" id="a891eb5e-62bb-40a6-b056-316e3b64d7a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:GetCurrencyCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="82169ba3-1bef-47a3-b67e-dc4dede2a1ad"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCountryByCountryCode" id="d1bfebb4-1462-44de-a8e8-38407e23a0b1" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCountryByCountryCode</con:operation><con:request name="GetCountryByCountryCode" id="735d69c5-3d17-436f-ab02-80cbbf463083"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCountryByCountryCode><web:CountryCode>${Properties#testData}</web:CountryCode></web:GetCountryByCountryCode>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f72bcdbf-14db-45d3-9566-88af0a77c165"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCountryByCurrencyCode" id="35207c60-580f-4671-97d7-e34b093ee562" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCountryByCurrencyCode</con:operation><con:request name="GetCountryByCurrencyCode" id="06decdde-22ae-4e78-ac61-f6684bec7a8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCountryByCurrencyCode><web:CurrencyCode>${Properties#testData}</web:CurrencyCode></web:GetCountryByCurrencyCode>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de40b3b8-1afa-409d-971f-82960481db7e"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d2769bba-a5dc-4123-af5b-acb88bce240e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9f2860a3-dab2-40a5-8c99-d99c57eb918a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>446f8520-7ab8-4444-9d86-4b571c357a36</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>14cd9287-eaa1-4d0d-bc6d-ab3763e1a788</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2211fc90-e858-4ae5-be46-8f9884d9dcfa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1bfebb4-1462-44de-a8e8-38407e23a0b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35207c60-580f-4671-97d7-e34b093ee562</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="df7e615a-6f92-425c-bc99-b60f65358425" name="SmokeTestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="71a3c2e6-ce75-48c1-b391-fc76aaa65bda" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="DriverTestCase" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="DriverScript" id="71cb1cb1-98e1-4c6d-b7f4-e245867f549c"><con:settings/><con:config><script>import java.io.*
import jxl.*
import jxl.write.*

def f = new File("c:\\nitin\\work\\soapui\\maven\\DataDrivenProject\\SmokeTests.xls")
def wk = Workbook.getWorkbook(f)
def ws = wk.getSheet("Sheet1")
def rows = ws.getRows()
def cols = ws.getColumns()
log.info("Rows = "+rows)
log.info("Cols = "+cols)
/*
for( def r=1;r&lt;rows;r++){
	for (def col=1;col&lt;4;col++){
		log.info(ws.getCell(col,r))
	}
}
*/
for( def i=1;i&lt;rows;i++){
	Cell statusCell = ws.getCell(2,i)
	log.info("Cell  "+statusCell.getContents())
	if(statusCell.getContents().equalsIgnoreCase("Y")){
		Cell testDataCell = ws.getCell(3,i)
		testRunner.testCase.getTestStepByName("Properties").setPropertyValue("testData",testDataCell.getContents())
		Cell stepNameCell = ws.getCell(1,i)
		log.info("Executing "+stepNameCell.getContents())
		testRunner.runTestStepByName(stepNameCell.getContents())
	}
}
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="71cd5198-5264-4761-bd22-41dccfbc4b75"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>testData</con:name><con:value>Lira</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="GetCountries" id="d8c9fe5c-19f6-40ae-b862-60cd0b46f3fb" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCountries</con:operation><con:request name="GetCountries" id="db31e947-b810-462e-9184-602a6fa61592"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCountries/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5f3cb3d5-6989-42df-8e37-396e2444b19a"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCurrencies" id="6a26cbf2-054b-4f05-b6e7-88c02a7193d6" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencies</con:operation><con:request name="GetCurrencies" id="7ca564aa-d040-4f12-8e04-afb7dc4cca03"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCurrencies/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="954359eb-1b5e-41ee-9467-e2efd3b5bcf5"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCurrencyCode" id="dbf0b982-1c6c-4c17-8435-ccc5a3594e9a" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencyCode</con:operation><con:request name="GetCurrencyCode" id="a891eb5e-62bb-40a6-b056-316e3b64d7a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCurrencyCode/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="82169ba3-1bef-47a3-b67e-dc4dede2a1ad"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCountryByCountryCode" id="5217e0e9-f5f1-4077-9527-23d5926f9ab3" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCountryByCountryCode</con:operation><con:request name="GetCountryByCountryCode" id="735d69c5-3d17-436f-ab02-80cbbf463083"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCountryByCountryCode><web:CountryCode>${Properties#testData}</web:CountryCode></web:GetCountryByCountryCode>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f72bcdbf-14db-45d3-9566-88af0a77c165"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetCountryByCurrencyCode" id="0d5a2f93-b275-46d0-a52a-d4667e7b1db8" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCountryByCurrencyCode</con:operation><con:request name="GetCountryByCurrencyCode" id="06decdde-22ae-4e78-ac61-f6684bec7a8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCountryByCurrencyCode><web:CurrencyCode>${Properties#testData}</web:CurrencyCode></web:GetCountryByCurrencyCode>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="de40b3b8-1afa-409d-971f-82960481db7e"/><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:tagId>7ec47462-52e1-4818-a096-6017ca279f7d</con:tagId></con:testCase><con:testCase id="47897dfb-00a6-4058-89f4-323918a9ded3" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="AssertionTestCase" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="request" name="GetCurrencyByCountry" id="51f2efaa-e61d-46a1-8df1-78a248de4c2f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>countrySoap</con:interface><con:operation>GetCurrencyByCountry</con:operation><con:request name="GetCurrencyByCountry" id="ed704b7b-cbb4-4849-a785-e7fbc7dc7bf8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/country.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCurrencyByCountry><web:CountryName>United States</web:CountryName></web:GetCurrencyByCountry>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b2cef64c-38a6-4869-a5a0-f63d8954aa98"/><con:assertion type="XPath Match" id="61d73baa-72bb-413b-a462-0dec71ddb195" name="Match content of [GetCurrencyByCountryResult] using RegEx" disabled="true"><con:configuration><path>declare namespace ns1='http://www.webserviceX.NET';
${GetCurrencyByCountry#Request#//ns1:GetCurrencyByCountry[1]/ns1:CountryName[1]}
//matches( //ns1:GetCurrencyByCountryResponse[1]/ns1:GetCurrencyByCountryResult[1]/text(), '${GetCurrencyByCountry#Request#//ns1:GetCurrencyByCountry[1]/ns1:CountryName[1]}' )</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="5830b87f-8309-47c2-9212-202459e1e29c" name="XPath Match" disabled="true"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="92a0114a-e47d-4b3e-9b2b-098b7fd3b8fa" name="Match content of [GetCurrencyByCountryResult] using RegEx" disabled="true"><con:configuration><path>declare namespace ns1='http://www.webserviceX.NET';
matches( //ns1:GetCurrencyByCountryResponse[1]/ns1:GetCurrencyByCountryResult[1]/text(), '${GetCurrencyByCountry111#Request#declare namespace web='http://www.webserviceX.NET'; //web:GetCurrencyByCountry[1]/web:CountryName[2]}' )</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="92a0114a-e47d-4b3e-9b2b-098b7fd3b8fa" name="MatchRequestWithResponseusingRegEx" disabled="true"><con:configuration><path>declare namespace ns1='http://www.webserviceX.NET';
matches( //ns1:GetCurrencyByCountryResponse[1]/ns1:GetCurrencyByCountryResult[1]/text(), '${GetCurrencyByCountry1#Request# //ns1:GetCurrencyByCountry[1]/ns1:CountryName[2]}' )</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="7de933e4-5556-48a7-97a2-698d123fb250" name="AssertRequestResponseUsingScript"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
def reqHolder = new XmlHolder( messageExchange.requestContentAsXml )
reqHolder.namespaces["web"] = "http://www.webserviceX.NET"
holder.namespaces["ns1"] = "http://www.webserviceX.NET"
def resNodeValue = holder.getNodeValue( "//ns1:GetCurrencyByCountryResponse[1]/ns1:GetCurrencyByCountryResult[1]" )
def reqNodeValue = reqHolder.getNodeValue("//web:GetCurrencyByCountry[1]/web:CountryName[1]")
//reqNodeValue = "united states"
def responseSlurper =new XmlSlurper().parseText(resNodeValue)

responseSlurper.Table.each { tbl ->
     //log.info("&lt;"+tbl.Name+">.........&lt;"+tbl.CountryCode+">.........&lt;"+tbl.Currency+">.........&lt;"+tbl.CurrencyCode+">")
  	// TODO: Add Assertion logic to compare the response with first service call data
  	//log.info(reqNodeValue == tbl.Name.toString())
  	//log.info(reqNodeValue.toString().equalsIgnoreCase(tbl.Name.toString()))
  	assert reqNodeValue.toString().equalsIgnoreCase(tbl.Name.toString())
}
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d4f690d9-130b-49b3-a0e0-3088a3034abb" name="AssertPropertyContains"><con:configuration><token>&lt;Name>${Properties#RequestedCountryName}&lt;/Name></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="properties" name="Properties" id="b81bd1aa-18c0-465d-a654-80afcb75dada"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>RequestedCountryName</con:name><con:value>United States</con:value></con:property><con:property><con:name>ResponseValue</con:name><con:value><![CDATA[<NewDataSet>
  <Table>
    <Name>United States</Name>
    <CountryCode>us</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>USD</CurrencyCode>
  </Table>
  <Table>
    <Name>United States</Name>
    <CountryCode>us</CountryCode>
    <Currency>Dollar</Currency>
    <CurrencyCode>USD</CurrencyCode>
  </Table>
</NewDataSet>]]></con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="assertionteststep" name="Assertion" id="ee148d04-979d-4ec9-9e67-06f6bde5fd79"><con:settings/><con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:entry><con:id>0cd136ea-1f01-4766-aa10-cf12a2b9aa61</con:id><con:isGroup>true</con:isGroup><con:sourceId>ee148d04-979d-4ec9-9e67-06f6bde5fd79</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group" id="417beb46-2013-4b92-98f2-a76cc4439246"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>d575eae5-1835-42c6-82cc-661013f5b6de</con:id><con:isGroup>false</con:isGroup><con:sourceId>51f2efaa-e61d-46a1-8df1-78a248de4c2f</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="XPath Match" name="XPath Match" id="fe778539-735d-491d-81ba-22da2c833fe2"><con:configuration><path>declare namespace ns1='http://www.webserviceX.NET';
contains(//ns1:GetCurrencyByCountryResponse[1]/ns1:GetCurrencyByCountryResult[1],'${Properties#ResponseValue#//NewDataSet[1]}')</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion></con:assertions><con:assertions><con:id>538f2b69-1c0a-4ce6-a89b-a2e901d28686</con:id><con:isGroup>true</con:isGroup><con:sourceId>ee148d04-979d-4ec9-9e67-06f6bde5fd79</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group1" id="fa0e9940-9ea5-4b77-b62f-912a4fb09ec8"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>dd4501f9-a6e6-4535-8aa8-ab63ce6592ff</con:id><con:isGroup>false</con:isGroup><con:sourceId>51f2efaa-e61d-46a1-8df1-78a248de4c2f</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="Simple Contains" name="Contains" id="66f7484e-a714-4766-9b8e-9f57eeff449f"><con:configuration><token>${Properties#ResponseValue#//NewDataSet[1]}</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:assertions><con:assertions><con:id>0e508b2a-aed7-4c48-bec1-6801c034e36b</con:id><con:isGroup>false</con:isGroup><con:sourceId>51f2efaa-e61d-46a1-8df1-78a248de4c2f</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="Simple Contains" name="Contains 2" id="7d679f93-6ad6-43e4-b786-19673e2b37ed"><con:configuration><token>us</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:assertions><con:operation>AND</con:operation></con:configuration></con:assertion></con:assertions><con:operation>OR</con:operation></con:configuration></con:assertion></con:entry><con:entry><con:id>90a0761b-4a03-4d54-950a-03ff2e893343</con:id><con:isGroup>false</con:isGroup><con:sourceId>b81bd1aa-18c0-465d-a654-80afcb75dada</con:sourceId><con:propertyName>RequestedCountryName</con:propertyName><con:assertion type="Simple Contains" name="Contains 3" id="b48e05eb-5edb-44f0-a94f-1ef29e0a06e9"><con:configuration><token>United States</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:entry></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d0185783-e6e7-4129-97a1-f7bfb45211b5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>RequestedCountryName</con:name><con:sourceType>Request</con:sourceType><con:sourceStep>GetCurrencyByCountry</con:sourceStep><con:sourcePath>declare namespace web='http://www.webserviceX.NET';
//web:GetCurrencyByCountry[1]/web:CountryName[1]</con:sourcePath><con:targetType>RequestedCountryName</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseValue</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetCurrencyByCountry</con:sourceStep><con:sourcePath>declare namespace ns1='http://www.webserviceX.NET';
//ns1:GetCurrencyByCountryResponse[1]/ns1:GetCurrencyByCountryResult[1]</con:sourcePath><con:targetType>ResponseValue</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="AssertionInScript" id="8db22540-1919-45a6-95e9-f6553219c8cb"><con:settings/><con:config><script>def xmlResponse = context.expand('${GetCurrencyByCountry#Response}')
// expValue is of type java.lang.String
def expValue = context.expand('${Properties#RequestedCountryName}')
assert xmlResponse.indexOf(expValue, 0)>0</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>51f2efaa-e61d-46a1-8df1-78a248de4c2f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b81bd1aa-18c0-465d-a654-80afcb75dada</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0185783-e6e7-4129-97a1-f7bfb45211b5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8db22540-1919-45a6-95e9-f6553219c8cb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee148d04-979d-4ec9-9e67-06f6bde5fd79</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="ce8a58cc-c301-4434-b308-938e51df95e3" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ConditionalTestCase" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="goto" name="Conditional Goto" id="d8fc49af-5a6e-42b3-bd5a-8640bb05baa6"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:authRepository/><con:tags><con:tag><con:id>7ec47462-52e1-4818-a096-6017ca279f7d</con:id><con:name>smoke</con:name></con:tag><con:tag><con:id>504fa60a-7ad8-4478-8b2e-ede7e3f42d52</con:id><con:name>regression</con:name></con:tag></con:tags></con:soapui-project>